name: Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize

permissions:
  contents: write

jobs:
  run-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.7

      - name: Installing dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r scripts/setup/minimal_requirements.txt
          pip install pytest

      - name: Lib setup for testing
        run: |
           python -m setup develop
           rm -rf litecrypt.egg-info

      - name: Running consts tests
        run: pytest tests/consts
      - name: Running helpers tests
        run: pytest tests/helpers
      - name: Running crypt tests
        run: pytest tests/crypt
      - name: Running database tests
        run: pytest tests/database/test_workflow.py --no-header --no-summary -q


  run-tests-2:
    needs: run-tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.10", "3.11","3.12"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
            python-version: 3.11


      - name: Installing dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r scripts/setup/minimal_requirements.txt
          pip install pytest

      - name: Lib setup for testing
        run: |
           python -m setup develop
           rm -rf litecrypt.egg-info

      - name: Running crypt tests
        run: pytest tests/crypt


  build-then-publish-pypi:
    if: github.event_name == 'push'
    needs: run-tests-2
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Environment setup
        uses: actions/setup-python@v3
        with:
          python-version: 3.7
      - name: Library setup
        run: |
          python -m pip install --upgrade pip
          pip install wheel twine
      - name: Build distro
        run: |
          rm -rf dist | rm -rf build | rm -rf litecrypt.egg-info
          python setup.py bdist_wheel sdist
      - name: Check distro
        run: twine check dist/*
      - name: Publish to PyPI
        env:
          TWINE_USERNAME: ${{ secrets.TWINE_USERNAME}}
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD}}
        run: twine upload dist/* --verbose

  build-and-publish-docker:
    if: github.event_name == 'push'
    needs: build-then-publish-pypi
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Version extraction
        id: get_version
        run: echo "::set-output name=version::$(python version.py)"
      - name: Building & tagging
        run: docker build -t ashgw/litecrypt:${{ steps.get_version.outputs.version }} scripts/docker-build
      - name: Login
        run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
      - name: Pushing to the hub
        run: docker push ashgw/litecrypt:${{ steps.get_version.outputs.version }}

  publish-documentation:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: build-then-publish-pypi
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: 3.x
      - run: echo "cache_id=$(date --utc '+%V')" >> $GITHUB_ENV
      - uses: actions/cache@v3
        with:
          key: mkdocs-material-${{ env.cache_id }}
          path: .cache
          restore-keys: |
            mkdocs-material-
      - run: pip install mkdocs-material
      - run: mkdocs gh-deploy --force
