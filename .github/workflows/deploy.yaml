name: Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize

permissions:
  contents: write

jobs:
  run-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Setup poetry
        run: |
            python -m pip install --upgrade pip
            python -m pip install poetry

      - name: Configure poetry
        run: poetry config virtualenvs.create false
      - name: Install deps
        run: poetry install
      - name: Running consts tests
        run: pytest tests/consts
      - name: Running helpers tests
        run: pytest tests/helpers
      - name: Running crypt tests
        run: pytest tests/crypt


  run-tests-2:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Setup poetry
        run: |
            python -m pip install --upgrade pip
            python -m pip install poetry

      - name: Configure poetry
        run: poetry config virtualenvs.create false
      - name: Install deps
        run: poetry install
      - name: Running tests
        run: pytest


  pypi:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: [run-tests]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Environment setup
        uses: actions/setup-python@v3
        with:
          python-version: 3.11
      - name: Install poetry
        run: |
          pip install --upgrade pip
          pip install poetry
      - name: Configure poetry
        run: poetry config virtualenvs.create false
      - name: Install Dependencies
        run: poetry install
      - name: Publish
        env:
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: |
          python -m poetry config pypi-token.pypi $PYPI_TOKEN
          set -e
          python -m poetry publish --build

  docker:
    if: github.event_name == 'push'
    needs: pypi
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Version extraction
        id: get_version
        run: echo "::set-output name=version::$(python version.py)"
      - name: Building & tagging
        run: docker build -t ashgw/litecrypt:${{ steps.get_version.outputs.version }} scripts/docker-build
      - name: Login
        run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
      - name: Pushing to the hub
        run: docker push ashgw/litecrypt:${{ steps.get_version.outputs.version }}

  docs:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: pypi
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: 3.x
      - run: echo "cache_id=$(date --utc '+%V')" >> $GITHUB_ENV
      - uses: actions/cache@v3
        with:
          key: mkdocs-material-${{ env.cache_id }}
          path: .cache
          restore-keys: |
            mkdocs-material-
      - run: pip install mkdocs-material
      - run: mkdocs gh-deploy --force
